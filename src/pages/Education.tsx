import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import Icon from "@/components/ui/icon";

export default function Education() {
  const [selectedCourse, setSelectedCourse] = useState<string | null>(null);

  const courses = [
    {
      id: 'javascript',
      title: 'JavaScript —Å –Ω—É–ª—è',
      description: '–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –ø–æ JavaScript –æ—Ç –æ—Å–Ω–æ–≤ –¥–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö –∫–æ–Ω—Ü–µ–ø—Ü–∏–π',
      level: '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
      duration: '40 —á–∞—Å–æ–≤',
      lessons: 120,
      rating: 4.9,
      students: '50,000+',
      price: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ',
      image: 'üíª',
      skills: ['–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ', '–§—É–Ω–∫—Ü–∏–∏', '–û–±—ä–µ–∫—Ç—ã', '–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å', 'DOM'],
      progress: 0,
      instructor: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤'
    },
    {
      id: 'react',
      title: 'React –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
      description: '–ò–∑—É—á–∏—Ç–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ —Å React',
      level: '–°—Ä–µ–¥–Ω–∏–π',
      duration: '30 —á–∞—Å–æ–≤',
      lessons: 85,
      rating: 4.8,
      students: '35,000+',
      price: '2,999 ‚ÇΩ',
      image: '‚öõÔ∏è',
      skills: ['–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã', 'Hooks', 'State', 'Props', 'Context'],
      progress: 25,
      instructor: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞'
    },
    {
      id: 'python',
      title: 'Python —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
      description: '–û—Ç –æ—Å–Ω–æ–≤ Python –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π',
      level: '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
      duration: '50 —á–∞—Å–æ–≤',
      lessons: 150,
      rating: 4.9,
      students: '75,000+',
      price: '3,999 ‚ÇΩ',
      image: 'üêç',
      skills: ['–°–∏–Ω—Ç–∞–∫—Å–∏—Å', '–û–û–ü', 'Django', 'API', '–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö'],
      progress: 60,
      instructor: '–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤'
    },
    {
      id: 'design',
      title: 'UI/UX –î–∏–∑–∞–π–Ω',
      description: '–û—Å–Ω–æ–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤',
      level: '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
      duration: '25 —á–∞—Å–æ–≤',
      lessons: 60,
      rating: 4.7,
      students: '20,000+',
      price: '4,999 ‚ÇΩ',
      image: 'üé®',
      skills: ['Figma', '–ü—Ä–æ—Ç–æ—Ç–∏–ø—ã', '–¢–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞', '–¶–≤–µ—Ç', '–Æ–∑–∞–±–∏–ª–∏—Ç–∏'],
      progress: 0,
      instructor: '–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞'
    }
  ];

  const achievements = [
    {
      title: '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏',
      description: '–ó–∞–≤–µ—Ä—à–∏–ª–∏ –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫',
      icon: 'üéØ',
      completed: true
    },
    {
      title: '–ú–∞—Ä–∞—Ñ–æ–Ω–µ—Ü',
      description: '–£—á–∏–ª–∏—Å—å 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥',
      icon: 'üèÉ',
      completed: true
    },
    {
      title: '–ö–æ–¥–µ—Ä',
      description: '–ù–∞–ø–∏—Å–∞–ª–∏ 100 —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞',
      icon: 'üë®‚Äçüíª',
      completed: false
    },
    {
      title: '–≠–∫—Å–ø–µ—Ä—Ç',
      description: '–ó–∞–≤–µ—Ä—à–∏–ª–∏ 3 –∫—É—Ä—Å–∞',
      icon: 'üß†',
      completed: false
    }
  ];

  const learningPaths = [
    {
      title: '–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
      description: 'Frontend + Backend —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
      courses: ['JavaScript', 'React', 'Node.js', '–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö'],
      duration: '6 –º–µ—Å—è—Ü–µ–≤',
      difficulty: '–°—Ä–µ–¥–Ω–∏–π',
      progress: 35
    },
    {
      title: 'Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
      description: 'Backend —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ Python',
      courses: ['Python', 'Django', 'PostgreSQL', 'API'],
      duration: '4 –º–µ—Å—è—Ü–∞',
      difficulty: '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
      progress: 60
    },
    {
      title: 'UX/UI –î–∏–∑–∞–π–Ω–µ—Ä',
      description: '–î–∏–∑–∞–π–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤',
      courses: ['Figma', '–ü—Ä–∏–Ω—Ü–∏–ø—ã –¥–∏–∑–∞–π–Ω–∞', '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è', '–ü—Ä–æ—Ç–æ—Ç–∏–ø—ã'],
      duration: '3 –º–µ—Å—è—Ü–∞',
      difficulty: '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
      progress: 0
    }
  ];

  const todayTasks = [
    {
      course: 'JavaScript —Å –Ω—É–ª—è',
      lesson: '–£—Ä–æ–∫ 15: –§—É–Ω–∫—Ü–∏–∏ –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞',
      duration: '25 –º–∏–Ω',
      type: '–í–∏–¥–µ–æ',
      completed: false
    },
    {
      course: 'React –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
      lesson: '–ü—Ä–∞–∫—Ç–∏–∫–∞: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞',
      duration: '45 –º–∏–Ω',
      type: '–ó–∞–¥–∞–Ω–∏–µ',
      completed: false
    },
    {
      course: 'Python —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
      lesson: '–¢–µ—Å—Ç: –û—Å–Ω–æ–≤—ã –û–û–ü',
      duration: '15 –º–∏–Ω',
      type: '–¢–µ—Å—Ç',
      completed: true
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-background to-background/95 text-foreground">
      {/* Header */}
      <header className="sticky top-0 z-50 glass border-b border-border/50 backdrop-blur-xl">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <Button variant="ghost" size="sm">
                <Icon name="ArrowLeft" size={20} />
              </Button>
              <div className="flex items-center space-x-3">
                <div className="w-10 h-10 rounded-full bg-gradient-to-r from-neon-blue to-neon-magenta flex items-center justify-center animate-neon-pulse">
                  <Icon name="GraduationCap" size={24} className="text-white" />
                </div>
                <div>
                  <h1 className="text-xl font-bold text-primary">–û–±—É—á–µ–Ω–∏–µ</h1>
                  <p className="text-sm text-muted-foreground">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø–ª–∞–Ω—ã ‚Ä¢ –ü—Ä–∞–∫—Ç–∏–∫–∞</p>
                </div>
              </div>
            </div>
            <div className="flex items-center space-x-3">
              <Badge variant="outline" className="neon-border border-neon-blue">
                <Icon name="Award" size={14} className="mr-1" />
                –£—Ä–æ–≤–µ–Ω—å 3
              </Badge>
              <Button variant="outline" size="sm">
                <Icon name="Settings" size={16} />
              </Button>
            </div>
          </div>
        </div>
      </header>

      <div className="container mx-auto px-6 py-8">
        <Tabs defaultValue="dashboard" className="space-y-8">
          <TabsList className="grid w-full grid-cols-4 glass">
            <TabsTrigger value="dashboard" className="data-[state=active]:bg-primary/20">
              <Icon name="LayoutDashboard" size={16} className="mr-2" />
              –î–∞—à–±–æ—Ä–¥
            </TabsTrigger>
            <TabsTrigger value="courses" className="data-[state=active]:bg-primary/20">
              <Icon name="BookOpen" size={16} className="mr-2" />
              –ö—É—Ä—Å—ã
            </TabsTrigger>
            <TabsTrigger value="paths" className="data-[state=active]:bg-primary/20">
              <Icon name="MapPin" size={16} className="mr-2" />
              –¢—Ä–µ–∫–∏
            </TabsTrigger>
            <TabsTrigger value="achievements" className="data-[state=active]:bg-primary/20">
              <Icon name="Award" size={16} className="mr-2" />
              –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
            </TabsTrigger>
          </TabsList>

          {/* Dashboard Tab */}
          <TabsContent value="dashboard" className="space-y-8">
            <div className="grid md:grid-cols-3 gap-6">
              {/* Today's Tasks */}
              <Card className="glass p-6 md:col-span-2">
                <div className="flex items-center justify-between mb-6">
                  <h3 className="text-xl font-bold text-primary">–ó–∞–¥–∞—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è</h3>
                  <Badge variant="outline">{todayTasks.filter(task => !task.completed).length} –æ—Å—Ç–∞–ª–æ—Å—å</Badge>
                </div>
                <div className="space-y-4">
                  {todayTasks.map((task, index) => (
                    <div 
                      key={index}
                      className={`p-4 rounded-lg border transition-all duration-300 ${
                        task.completed 
                          ? 'bg-green-500/10 border-green-500/30' 
                          : 'bg-muted/50 border-border hover:bg-muted'
                      }`}
                    >
                      <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-3">
                          <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                            task.completed ? 'bg-green-500' : 'bg-muted-foreground/20'
                          }`}>
                            <Icon 
                              name={task.completed ? 'Check' : 'Clock'} 
                              size={16} 
                              className={task.completed ? 'text-white' : 'text-muted-foreground'} 
                            />
                          </div>
                          <div>
                            <p className="font-medium text-sm">{task.lesson}</p>
                            <p className="text-xs text-muted-foreground">{task.course}</p>
                          </div>
                        </div>
                        <div className="text-right">
                          <Badge variant="outline" className="text-xs mb-1">
                            {task.type}
                          </Badge>
                          <p className="text-xs text-muted-foreground">{task.duration}</p>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </Card>

              {/* Study Stats */}
              <Card className="glass p-6">
                <h3 className="text-xl font-bold text-primary mb-6">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                <div className="space-y-4">
                  <div className="text-center p-4 rounded-lg bg-primary/10">
                    <div className="text-3xl font-bold text-primary mb-1">47</div>
                    <p className="text-sm text-muted-foreground">–¥–Ω–µ–π –ø–æ–¥—Ä—è–¥</p>
                  </div>
                  <div className="grid grid-cols-2 gap-4">
                    <div className="text-center">
                      <div className="text-xl font-bold text-neon-blue">12</div>
                      <p className="text-xs text-muted-foreground">–∫—É—Ä—Å–æ–≤</p>
                    </div>
                    <div className="text-center">
                      <div className="text-xl font-bold text-neon-magenta">156</div>
                      <p className="text-xs text-muted-foreground">—É—Ä–æ–∫–æ–≤</p>
                    </div>
                  </div>
                  <div className="text-center">
                    <div className="text-lg font-bold text-neon-cyan mb-2">67%</div>
                    <Progress value={67} className="w-full" />
                    <p className="text-xs text-muted-foreground mt-1">–æ–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å</p>
                  </div>
                </div>
              </Card>
            </div>

            {/* Continue Learning */}
            <div>
              <h3 className="text-2xl font-bold text-primary mb-6">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ</h3>
              <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
                {courses.filter(course => course.progress > 0).map((course) => (
                  <Card key={course.id} className="glass p-6 hover:neon-border hover:border-neon-blue transition-all duration-300">
                    <div className="text-center mb-4">
                      <div className="text-4xl mb-3">{course.image}</div>
                      <h4 className="font-bold text-primary">{course.title}</h4>
                      <p className="text-sm text-muted-foreground">{course.instructor}</p>
                    </div>
                    <div className="mb-4">
                      <div className="flex justify-between text-sm mb-1">
                        <span>–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
                        <span>{course.progress}%</span>
                      </div>
                      <Progress value={course.progress} />
                    </div>
                    <Button variant="outline" className="w-full">
                      –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                    </Button>
                  </Card>
                ))}
              </div>
            </div>
          </TabsContent>

          {/* Courses Tab */}
          <TabsContent value="courses" className="space-y-8">
            <div className="text-center mb-8">
              <h2 className="text-4xl font-bold mb-4 neon-text text-primary">
                –ö–∞—Ç–∞–ª–æ–≥ –∫—É—Ä—Å–æ–≤
              </h2>
              <p className="text-xl text-muted-foreground">
                –ò–∑—É—á–∞–π—Ç–µ –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º
              </p>
            </div>

            <div className="grid md:grid-cols-2 gap-6">
              {courses.map((course) => (
                <Card 
                  key={course.id}
                  className="glass p-6 hover:neon-border hover:border-neon-blue transition-all duration-300"
                >
                  <div className="flex items-start space-x-4">
                    <div className="text-5xl">{course.image}</div>
                    <div className="flex-1">
                      <div className="flex items-start justify-between mb-2">
                        <h3 className="text-xl font-bold text-primary">{course.title}</h3>
                        <Badge variant={course.price === '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' ? 'default' : 'outline'}>
                          {course.price}
                        </Badge>
                      </div>
                      <p className="text-muted-foreground text-sm mb-3">{course.description}</p>
                      
                      <div className="flex items-center space-x-4 mb-3 text-sm text-muted-foreground">
                        <div className="flex items-center">
                          <Icon name="Clock" size={14} className="mr-1" />
                          {course.duration}
                        </div>
                        <div className="flex items-center">
                          <Icon name="PlayCircle" size={14} className="mr-1" />
                          {course.lessons} —É—Ä–æ–∫–æ–≤
                        </div>
                        <div className="flex items-center">
                          <Icon name="Star" size={14} className="mr-1 text-yellow-500" />
                          {course.rating}
                        </div>
                      </div>

                      <div className="mb-4">
                        <p className="text-sm font-medium mb-2">–ù–∞–≤—ã–∫–∏:</p>
                        <div className="flex flex-wrap gap-1">
                          {course.skills.map((skill) => (
                            <Badge key={skill} variant="secondary" className="text-xs">
                              {skill}
                            </Badge>
                          ))}
                        </div>
                      </div>

                      {course.progress > 0 && (
                        <div className="mb-4">
                          <div className="flex justify-between text-sm mb-1">
                            <span>–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
                            <span>{course.progress}%</span>
                          </div>
                          <Progress value={course.progress} />
                        </div>
                      )}

                      <Button 
                        className={`w-full ${
                          course.progress > 0 
                            ? 'bg-gradient-to-r from-neon-blue to-neon-cyan text-white' 
                            : ''
                        }`}
                        variant={course.progress > 0 ? 'default' : 'outline'}
                      >
                        {course.progress > 0 ? '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' : '–ù–∞—á–∞—Ç—å –∫—É—Ä—Å'}
                      </Button>
                    </div>
                  </div>
                </Card>
              ))}
            </div>
          </TabsContent>

          {/* Learning Paths Tab */}
          <TabsContent value="paths" className="space-y-8">
            <div className="text-center mb-8">
              <h2 className="text-3xl font-bold text-primary mb-4">–¢—Ä–µ–∫–∏ –æ–±—É—á–µ–Ω–∏—è</h2>
              <p className="text-muted-foreground">–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–µ–π</p>
            </div>

            <div className="grid gap-6">
              {learningPaths.map((path, index) => (
                <Card key={index} className="glass p-6 hover:neon-border hover:border-neon-magenta transition-all duration-300">
                  <div className="flex items-center justify-between mb-4">
                    <div>
                      <h3 className="text-xl font-bold text-primary">{path.title}</h3>
                      <p className="text-muted-foreground">{path.description}</p>
                    </div>
                    <div className="text-right">
                      <Badge variant="outline" className="mb-2">{path.difficulty}</Badge>
                      <p className="text-sm text-muted-foreground">{path.duration}</p>
                    </div>
                  </div>

                  <div className="mb-4">
                    <p className="text-sm font-medium mb-2">–ö—É—Ä—Å—ã –≤ —Ç—Ä–µ–∫–µ:</p>
                    <div className="flex flex-wrap gap-2">
                      {path.courses.map((course) => (
                        <Badge key={course} variant="secondary" className="text-xs">
                          {course}
                        </Badge>
                      ))}
                    </div>
                  </div>

                  <div className="mb-4">
                    <div className="flex justify-between text-sm mb-1">
                      <span>–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
                      <span>{path.progress}%</span>
                    </div>
                    <Progress value={path.progress} />
                  </div>

                  <Button 
                    variant={path.progress > 0 ? 'default' : 'outline'}
                    className={path.progress > 0 ? 'bg-gradient-to-r from-neon-magenta to-neon-cyan text-white' : ''}
                  >
                    {path.progress > 0 ? '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ç—Ä–µ–∫' : '–ù–∞—á–∞—Ç—å —Ç—Ä–µ–∫'}
                  </Button>
                </Card>
              ))}
            </div>
          </TabsContent>

          {/* Achievements Tab */}
          <TabsContent value="achievements" className="space-y-8">
            <div className="text-center mb-8">
              <h2 className="text-3xl font-bold text-primary mb-4">–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h2>
              <p className="text-muted-foreground">–û—Ç–º–µ—á–∞–π—Ç–µ —Å–≤–æ–∏ —É—Å–ø–µ—Ö–∏ –≤ –æ–±—É—á–µ–Ω–∏–∏</p>
            </div>

            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
              {achievements.map((achievement, index) => (
                <Card 
                  key={index}
                  className={`glass p-6 text-center transition-all duration-300 ${
                    achievement.completed 
                      ? 'neon-border border-neon-cyan' 
                      : 'hover:bg-muted/50'
                  }`}
                >
                  <div className={`text-6xl mb-4 ${achievement.completed ? '' : 'grayscale opacity-50'}`}>
                    {achievement.icon}
                  </div>
                  <h3 className={`font-bold mb-2 ${achievement.completed ? 'text-primary' : 'text-muted-foreground'}`}>
                    {achievement.title}
                  </h3>
                  <p className="text-sm text-muted-foreground">{achievement.description}</p>
                  {achievement.completed && (
                    <Badge variant="default" className="mt-3 bg-green-500">
                      <Icon name="Check" size={12} className="mr-1" />
                      –ü–æ–ª—É—á–µ–Ω–æ
                    </Badge>
                  )}
                </Card>
              ))}
            </div>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
}